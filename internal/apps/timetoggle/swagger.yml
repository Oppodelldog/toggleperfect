swagger: "2.0"
info:
  description: "Swagger definition for time toggle app in toggleperfect"
  version: "1.0.0"
  title: "Timetoggle API"
host: "TOGGLE_PERFECT_API_DOCS_HOST"
basePath: "/v1"
tags:
  - name: "project"
    description: "Everything about Projects"
schemes:
  - "http"
paths:
  /projects:
    post:
      tags:
        - "project"
      summary: "Add a new project"
      description: ""
      operationId: "addProject"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Project object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Project"
      responses:
        204:
          description: "OK"
        405:
          description: "Invalid input"
        500:
          description: "Server error"
          schema:
            $ref: "#/definitions/ServerError"
    get:
      tags:
        - "project"
      summary: "Find all projects"
      description: "Returns a list of all projects"
      operationId: "getProjectList"
      produces:
        - "application/xml"
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Projects"
        500:
          description: "Server error"
          schema:
            $ref: "#/definitions/ServerError"
  /project/{projectId}:
    get:
      tags:
        - "project"
      summary: "Find project by ID"
      description: "Returns a single project"
      operationId: "getProjectById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "ID of project to return"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Project"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Project not found"
    delete:
      tags:
        - "project"
      summary: "Deletes a project"
      description: ""
      operationId: "deleteProject"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "Project id to delete"
          required: true
          type: "string"
      responses:
        204:
          description: "OK"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Project not found"
  /captures/start:
    post:
      tags:
        - "capture"
      summary: "Add a new start capture"
      description: ""
      operationId: "addStartCapture"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Capture object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Capture"
      responses:
        204:
          description: "OK"
        405:
          description: "Invalid input"
        500:
          description: "Server error"
          schema:
            $ref: "#/definitions/ServerError"
  /captures/stop:
    post:
      tags:
        - "capture"
      summary: "Add a new stop capture"
      description: ""
      operationId: "addStopCapture"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Capture object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Capture"
      responses:
        204:
          description: "OK"
        405:
          description: "Invalid input"
        500:
          description: "Server error"
          schema:
            $ref: "#/definitions/ServerError"
definitions:
  Projects:
    type: "object"
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'
        xml:
          name: "Project"
  Project:
    type: "object"
    required:
      - "id"
      - "description"
    properties:
      id:
        type: "string"
        "x-nullable": false
      description:
        type: "string"
        "x-nullable": false
    xml:
      name: "Project"
  Capture:
    type: "object"
    required:
      - "id"
      - "timestamp"
    properties:
      id:
        type: "string"
        "x-nullable": false
      timestamp:
        type: "integer"
        "x-nullable": false
    xml:
      name: "Capture"

  ServerError:
    type: "object"
    properties:
      description:
        type: "string"
        "x-nullable": false

